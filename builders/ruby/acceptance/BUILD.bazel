load("//internal/acceptance:defs.bzl", "acceptance_test_argo_source", "acceptance_test_suite")
load(":args.bzl", "rubyargs")
load(":runtime.bzl", "gae_runtimes", "gcf_runtimes")

licenses(["notice"])

exports_files([
    "config.yaml",
    "args.bzl",
])

test_suite(
    # run all tests in this BUILD
    name = "acceptance_test",
)

VERSION_RUBY31 = "3.1.0"

VERSIONS_ALL = {n: v for n, v in gae_runtimes.items()}

VERSIONS_ALL["ruby31"] = VERSION_RUBY31

VERSIONS_WITH_GAE_SUPPORT = gae_runtimes

VERSIONS_WITH_GCF_SUPPORT = gcf_runtimes

VERSIONS_WITH_FLEX_SUPPORT = {
    "ruby27": gae_runtimes["ruby27"],
    "ruby30": gae_runtimes["ruby30"],
    "ruby32": gae_runtimes["ruby32"],
}

VERSIONS_WITH_GCP_SUPPORT = VERSIONS_ALL

acceptance_test_suite(
    name = "gcp_test",
    srcs = [
        "common_test.go",
        "gcp_test.go",
    ],
    builder = "//builders/ruby:builder.tar",
    rundir = ".",
    testdata = "//builders/testdata/ruby:generic",
    versions = VERSIONS_WITH_GCP_SUPPORT,
)

# Test the run image tagged as latest in gae-runtimes.
acceptance_test_suite(
    name = "gae_test",
    srcs = [
        "common_test.go",
        "gae_test.go",
    ],
    argsmap = rubyargs(),
    builder = "//builders/ruby:builder.tar",
    rundir = ".",
    testdata = "//builders/testdata/ruby:appengine",
    versions = VERSIONS_WITH_GAE_SUPPORT,
)

# Test the run image tagged as ${_CANDIDATE_NAME} in gae-runtimes-private.
acceptance_test_suite(
    name = "gae_candidate_test",
    srcs = [
        "common_test.go",
        "gae_test.go",
    ],
    argsmap = rubyargs("$${_CANDIDATE_NAME}"),
    builder = "//builders/ruby:builder.tar",
    rundir = ".",
    testdata = "//builders/testdata/ruby:appengine",
    versions = VERSIONS_WITH_GAE_SUPPORT,
)

# This uses the latest Ubuntu 18 stack run image.
acceptance_test_suite(
    name = "gcf_test",
    srcs = [
        "common_test.go",
        "gcf_test.go",
    ],
    builder = "//builders/ruby:builder.tar",
    rundir = ".",
    testdata = "//builders/testdata/ruby:functions",
    versions = VERSIONS_WITH_GCF_SUPPORT,
)

acceptance_test_suite(
    name = "flex_test",
    srcs = [
        "flex_test.go",
    ],
    builder = "//builders/ruby:builder.tar",
    rundir = ".",
    testdata = "//builders/testdata/ruby:flex",
    versions = VERSIONS_WITH_FLEX_SUPPORT,
)

acceptance_test_argo_source(
    name = "argo_source",
    testdata = "//builders/testdata:ruby",
)

exports_files(["runtime.bzl"])
